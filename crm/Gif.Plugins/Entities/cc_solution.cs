//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gif.Plugins.PluginEntities
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public enum cc_solutionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// 
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("cc_solution")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public partial class cc_solution : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string cc_AssessmentNotes = "cc_assessmentnotes";
			public const string cc_AssessmentStatus = "cc_assessmentstatus";
			public const string cc_AuditTrailRetrieval = "cc_audittrailretrieval";
			public const string cc_Benefit1 = "cc_benefit1";
			public const string cc_Benefit2 = "cc_benefit2";
			public const string cc_Benefit3 = "cc_benefit3";
			public const string cc_CapabilitiesAssessedBy = "cc_capabilitiesassessedby";
			public const string cc_Capability = "cc_capability";
			public const string cc_Capability2 = "cc_capability2";
			public const string cc_Capability3 = "cc_capability3";
			public const string cc_CapabilityStandard = "cc_capabilitystandard";
			public const string cc_CapabilityStandard2 = "cc_capabilitystandard2";
			public const string cc_CapabilityStandard3 = "cc_capabilitystandard3";
			public const string cc_CaseStudyFile1 = "cc_casestudyfile1";
			public const string cc_CaseStudyFile2 = "cc_casestudyfile2";
			public const string cc_CaseStudyFile3 = "cc_casestudyfile3";
			public const string cc_CaseStudyTitle1 = "cc_casestudytitle1";
			public const string cc_CaseStudyTitle2 = "cc_casestudytitle2";
			public const string cc_CaseStudyTitle3 = "cc_casestudytitle3";
			public const string cc_ClinicalSafetyOfficer = "cc_clinicalsafetyofficer";
			public const string cc_CompanyInformation = "cc_companyinformation";
			public const string cc_companylogo = "cc_companylogo";
			public const string cc_ConnectionAgreementSignatory = "cc_connectionagreementsignatory";
			public const string cc_ContactId = "cc_contactid";
			public const string cc_Costperpatient = "cc_costperpatient";
			public const string cc_costperpatient_Base = "cc_costperpatient_base";
			public const string cc_Costperuser = "cc_costperuser";
			public const string cc_costperuser_Base = "cc_costperuser_base";
			public const string cc_CreatedByID = "cc_createdbyid";
			public const string cc_DataMigration = "cc_datamigration";
			public const string cc_DeadlineforCompletion = "cc_deadlineforcompletion";
			public const string cc_DeploymentSupport = "cc_deploymentsupport";
			public const string cc_Description = "cc_description";
			public const string cc_DesignatedServiceContact = "cc_designatedservicecontact";
			public const string cc_DetailedSummary = "cc_detailedsummary";
			public const string cc_EvidenceSubmitted = "cc_evidencesubmitted";
			public const string cc_EvidenceSubmitted2 = "cc_evidencesubmitted2";
			public const string cc_EvidenceSubmitted3 = "cc_evidencesubmitted3";
			public const string cc_ExecutiveSponsor = "cc_executivesponsor";
			public const string cc_Framework = "cc_framework";
			public const string cc_LeadContact = "cc_leadcontact";
			public const string cc_LinktoCapabilityEvidence = "cc_linktocapabilityevidence";
			public const string cc_LinktoCapabilityEvidence2 = "cc_linktocapabilityevidence2";
			public const string cc_LinktoCapabilityEvidence3 = "cc_linktocapabilityevidence3";
			public const string cc_LinktoStandardEvidence = "cc_linktostandardevidence";
			public const string cc_LinktoStandardEvidence2 = "cc_linktostandardevidence2";
			public const string cc_LinktoStandardEvidence3 = "cc_linktostandardevidence3";
			public const string cc_ModifiedBy = "cc_modifiedby";
			public const string cc_name = "cc_name";
			public const string cc_OrganisationId = "cc_organisationid";
			public const string cc_Previous_Version = "cc_previous_version";
			public const string cc_PreviousVersion = "cc_previousversion";
			public const string cc_ProductPage = "cc_productpage";
			public const string cc_SecondaryContact = "cc_secondarycontact";
			public const string cc_Solution_Version = "cc_solution_version";
			public const string cc_solutionId = "cc_solutionid";
			public const string Id = "cc_solutionid";
			public const string cc_SolutionReferenceNumber = "cc_solutionreferencenumber";
			public const string cc_SolutionSubmitted = "cc_solutionsubmitted";
			public const string cc_StandardMessage = "cc_standardmessage";
			public const string cc_StandardMessage2 = "cc_standardmessage2";
			public const string cc_StandardMessage3 = "cc_standardmessage3";
			public const string cc_StandardStatus = "cc_standardstatus";
			public const string cc_StandardStatus2 = "cc_standardstatus2";
			public const string cc_StandardStatus3 = "cc_standardstatus3";
			public const string cc_StandardSubmitted = "cc_standardsubmitted";
			public const string cc_StandardSubmitted2 = "cc_standardsubmitted2";
			public const string cc_StandardSubmitted3 = "cc_standardsubmitted3";
			public const string cc_System1 = "cc_system1";
			public const string cc_System2 = "cc_system2";
			public const string cc_System3 = "cc_system3";
			public const string cc_SystemRequirement1 = "cc_systemrequirement1";
			public const string cc_SystemRequirement2 = "cc_systemrequirement2";
			public const string cc_SystemRequirement3 = "cc_systemrequirement3";
			public const string cc_SystemRequirement4 = "cc_systemrequirement4";
			public const string cc_TechnicalContact = "cc_technicalcontact";
			public const string cc_TechnicalContactID = "cc_technicalcontactid";
			public const string cc_TrainingOnline = "cc_trainingonline";
			public const string cc_TrainingOnSite = "cc_trainingonsite";
			public const string cc_TrainingVirtualClassroom = "cc_trainingvirtualclassroom";
			public const string cc_Version = "cc_version";
			public const string cc_WriteInBenefit1 = "cc_writeinbenefit1";
			public const string cc_WriteInBenefit2 = "cc_writeinbenefit2";
			public const string cc_WriteInBenefit3 = "cc_writeinbenefit3";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string processid = "processid";
			public const string stageid = "stageid";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string traversedpath = "traversedpath";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public cc_solution() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "cc_solution";
		
		public const string PrimaryIdAttribute = "cc_solutionid";
		
		public const string PrimaryNameAttribute = "cc_name";
		
		public const int EntityTypeCode = 10365;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_assessmentnotes")]
		public string cc_AssessmentNotes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_assessmentnotes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_AssessmentNotes");
				this.SetAttributeValue("cc_assessmentnotes", value);
				this.OnPropertyChanged("cc_AssessmentNotes");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_assessmentstatus")]
		public Microsoft.Xrm.Sdk.OptionSetValue cc_AssessmentStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cc_assessmentstatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_AssessmentStatus");
				this.SetAttributeValue("cc_assessmentstatus", value);
				this.OnPropertyChanged("cc_AssessmentStatus");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_audittrailretrieval")]
		public System.Nullable<bool> cc_AuditTrailRetrieval
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cc_audittrailretrieval");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_AuditTrailRetrieval");
				this.SetAttributeValue("cc_audittrailretrieval", value);
				this.OnPropertyChanged("cc_AuditTrailRetrieval");
			}
		}
		
		/// <summary>
		/// Option Set for Benefits
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_benefit1")]
		public Microsoft.Xrm.Sdk.OptionSetValue cc_Benefit1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cc_benefit1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_Benefit1");
				this.SetAttributeValue("cc_benefit1", value);
				this.OnPropertyChanged("cc_Benefit1");
			}
		}
		
		/// <summary>
		/// Option Set for Benefits
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_benefit2")]
		public Microsoft.Xrm.Sdk.OptionSetValue cc_Benefit2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cc_benefit2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_Benefit2");
				this.SetAttributeValue("cc_benefit2", value);
				this.OnPropertyChanged("cc_Benefit2");
			}
		}
		
		/// <summary>
		/// Option Set for Benefits
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_benefit3")]
		public Microsoft.Xrm.Sdk.OptionSetValue cc_Benefit3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cc_benefit3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_Benefit3");
				this.SetAttributeValue("cc_benefit3", value);
				this.OnPropertyChanged("cc_Benefit3");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_capabilitiesassessedby")]
		public Microsoft.Xrm.Sdk.EntityReference cc_CapabilitiesAssessedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_capabilitiesassessedby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_CapabilitiesAssessedBy");
				this.SetAttributeValue("cc_capabilitiesassessedby", value);
				this.OnPropertyChanged("cc_CapabilitiesAssessedBy");
			}
		}
		
		/// <summary>
		/// Lookup to Capabilities entity
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_capability")]
		public Microsoft.Xrm.Sdk.EntityReference cc_Capability
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_capability");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_Capability");
				this.SetAttributeValue("cc_capability", value);
				this.OnPropertyChanged("cc_Capability");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_capability2")]
		public Microsoft.Xrm.Sdk.EntityReference cc_Capability2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_capability2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_Capability2");
				this.SetAttributeValue("cc_capability2", value);
				this.OnPropertyChanged("cc_Capability2");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_capability3")]
		public Microsoft.Xrm.Sdk.EntityReference cc_Capability3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_capability3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_Capability3");
				this.SetAttributeValue("cc_capability3", value);
				this.OnPropertyChanged("cc_Capability3");
			}
		}
		
		/// <summary>
		/// Lookup to Capability Standard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_capabilitystandard")]
		public Microsoft.Xrm.Sdk.EntityReference cc_CapabilityStandard
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_capabilitystandard");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_CapabilityStandard");
				this.SetAttributeValue("cc_capabilitystandard", value);
				this.OnPropertyChanged("cc_CapabilityStandard");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_capabilitystandard2")]
		public Microsoft.Xrm.Sdk.EntityReference cc_CapabilityStandard2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_capabilitystandard2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_CapabilityStandard2");
				this.SetAttributeValue("cc_capabilitystandard2", value);
				this.OnPropertyChanged("cc_CapabilityStandard2");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_capabilitystandard3")]
		public Microsoft.Xrm.Sdk.EntityReference cc_CapabilityStandard3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_capabilitystandard3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_CapabilityStandard3");
				this.SetAttributeValue("cc_capabilitystandard3", value);
				this.OnPropertyChanged("cc_CapabilityStandard3");
			}
		}
		
		/// <summary>
		/// Link to Case Study File 1
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_casestudyfile1")]
		public string cc_CaseStudyFile1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_casestudyfile1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_CaseStudyFile1");
				this.SetAttributeValue("cc_casestudyfile1", value);
				this.OnPropertyChanged("cc_CaseStudyFile1");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_casestudyfile2")]
		public string cc_CaseStudyFile2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_casestudyfile2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_CaseStudyFile2");
				this.SetAttributeValue("cc_casestudyfile2", value);
				this.OnPropertyChanged("cc_CaseStudyFile2");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_casestudyfile3")]
		public string cc_CaseStudyFile3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_casestudyfile3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_CaseStudyFile3");
				this.SetAttributeValue("cc_casestudyfile3", value);
				this.OnPropertyChanged("cc_CaseStudyFile3");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_casestudytitle1")]
		public string cc_CaseStudyTitle1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_casestudytitle1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_CaseStudyTitle1");
				this.SetAttributeValue("cc_casestudytitle1", value);
				this.OnPropertyChanged("cc_CaseStudyTitle1");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_casestudytitle2")]
		public string cc_CaseStudyTitle2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_casestudytitle2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_CaseStudyTitle2");
				this.SetAttributeValue("cc_casestudytitle2", value);
				this.OnPropertyChanged("cc_CaseStudyTitle2");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_casestudytitle3")]
		public string cc_CaseStudyTitle3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_casestudytitle3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_CaseStudyTitle3");
				this.SetAttributeValue("cc_casestudytitle3", value);
				this.OnPropertyChanged("cc_CaseStudyTitle3");
			}
		}
		
		/// <summary>
		/// Lookup to Contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_clinicalsafetyofficer")]
		public Microsoft.Xrm.Sdk.EntityReference cc_ClinicalSafetyOfficer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_clinicalsafetyofficer");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_ClinicalSafetyOfficer");
				this.SetAttributeValue("cc_clinicalsafetyofficer", value);
				this.OnPropertyChanged("cc_ClinicalSafetyOfficer");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_companyinformation")]
		public string cc_CompanyInformation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_companyinformation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_CompanyInformation");
				this.SetAttributeValue("cc_companyinformation", value);
				this.OnPropertyChanged("cc_CompanyInformation");
			}
		}
		
		/// <summary>
		/// Link to company logo
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_companylogo")]
		public string cc_companylogo
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_companylogo");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_companylogo");
				this.SetAttributeValue("cc_companylogo", value);
				this.OnPropertyChanged("cc_companylogo");
			}
		}
		
		/// <summary>
		/// Lookup to Contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_connectionagreementsignatory")]
		public Microsoft.Xrm.Sdk.EntityReference cc_ConnectionAgreementSignatory
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_connectionagreementsignatory");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_ConnectionAgreementSignatory");
				this.SetAttributeValue("cc_connectionagreementsignatory", value);
				this.OnPropertyChanged("cc_ConnectionAgreementSignatory");
			}
		}
		
		/// <summary>
		/// Unique identifier for Contact associated with Solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_contactid")]
		public Microsoft.Xrm.Sdk.EntityReference cc_ContactId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_contactid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_ContactId");
				this.SetAttributeValue("cc_contactid", value);
				this.OnPropertyChanged("cc_ContactId");
			}
		}
		
		/// <summary>
		/// Currency field for cost per patient
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_costperpatient")]
		public Microsoft.Xrm.Sdk.Money cc_Costperpatient
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("cc_costperpatient");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_Costperpatient");
				this.SetAttributeValue("cc_costperpatient", value);
				this.OnPropertyChanged("cc_Costperpatient");
			}
		}
		
		/// <summary>
		/// Value of the Cost per patient in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_costperpatient_base")]
		public Microsoft.Xrm.Sdk.Money cc_costperpatient_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("cc_costperpatient_base");
			}
		}
		
		/// <summary>
		/// Currency field for cost per user
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_costperuser")]
		public Microsoft.Xrm.Sdk.Money cc_Costperuser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("cc_costperuser");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_Costperuser");
				this.SetAttributeValue("cc_costperuser", value);
				this.OnPropertyChanged("cc_Costperuser");
			}
		}
		
		/// <summary>
		/// Value of the Cost per user in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_costperuser_base")]
		public Microsoft.Xrm.Sdk.Money cc_costperuser_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("cc_costperuser_base");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_createdbyid")]
		public Microsoft.Xrm.Sdk.EntityReference cc_CreatedByID
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_createdbyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_CreatedByID");
				this.SetAttributeValue("cc_createdbyid", value);
				this.OnPropertyChanged("cc_CreatedByID");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_datamigration")]
		public System.Nullable<bool> cc_DataMigration
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cc_datamigration");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_DataMigration");
				this.SetAttributeValue("cc_datamigration", value);
				this.OnPropertyChanged("cc_DataMigration");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_deadlineforcompletion")]
		public System.Nullable<System.DateTime> cc_DeadlineforCompletion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("cc_deadlineforcompletion");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_DeadlineforCompletion");
				this.SetAttributeValue("cc_deadlineforcompletion", value);
				this.OnPropertyChanged("cc_DeadlineforCompletion");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_deploymentsupport")]
		public System.Nullable<bool> cc_DeploymentSupport
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cc_deploymentsupport");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_DeploymentSupport");
				this.SetAttributeValue("cc_deploymentsupport", value);
				this.OnPropertyChanged("cc_DeploymentSupport");
			}
		}
		
		/// <summary>
		/// Product/Service description, summary
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_description")]
		public string cc_Description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_Description");
				this.SetAttributeValue("cc_description", value);
				this.OnPropertyChanged("cc_Description");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_designatedservicecontact")]
		public System.Nullable<bool> cc_DesignatedServiceContact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cc_designatedservicecontact");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_DesignatedServiceContact");
				this.SetAttributeValue("cc_designatedservicecontact", value);
				this.OnPropertyChanged("cc_DesignatedServiceContact");
			}
		}
		
		/// <summary>
		/// Detailed summary of Solution
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_detailedsummary")]
		public string cc_DetailedSummary
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_detailedsummary");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_DetailedSummary");
				this.SetAttributeValue("cc_detailedsummary", value);
				this.OnPropertyChanged("cc_DetailedSummary");
			}
		}
		
		/// <summary>
		/// Two option field, yes or no
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_evidencesubmitted")]
		public System.Nullable<bool> cc_EvidenceSubmitted
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cc_evidencesubmitted");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_EvidenceSubmitted");
				this.SetAttributeValue("cc_evidencesubmitted", value);
				this.OnPropertyChanged("cc_EvidenceSubmitted");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_evidencesubmitted2")]
		public System.Nullable<bool> cc_EvidenceSubmitted2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cc_evidencesubmitted2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_EvidenceSubmitted2");
				this.SetAttributeValue("cc_evidencesubmitted2", value);
				this.OnPropertyChanged("cc_EvidenceSubmitted2");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_evidencesubmitted3")]
		public System.Nullable<bool> cc_EvidenceSubmitted3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cc_evidencesubmitted3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_EvidenceSubmitted3");
				this.SetAttributeValue("cc_evidencesubmitted3", value);
				this.OnPropertyChanged("cc_EvidenceSubmitted3");
			}
		}
		
		/// <summary>
		/// Lookup to Contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_executivesponsor")]
		public Microsoft.Xrm.Sdk.EntityReference cc_ExecutiveSponsor
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_executivesponsor");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_ExecutiveSponsor");
				this.SetAttributeValue("cc_executivesponsor", value);
				this.OnPropertyChanged("cc_ExecutiveSponsor");
			}
		}
		
		/// <summary>
		/// Unique identifier of the framework with which the solution is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_framework")]
		public Microsoft.Xrm.Sdk.EntityReference cc_Framework
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_framework");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_Framework");
				this.SetAttributeValue("cc_framework", value);
				this.OnPropertyChanged("cc_Framework");
			}
		}
		
		/// <summary>
		/// Lookup to Contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_leadcontact")]
		public Microsoft.Xrm.Sdk.EntityReference cc_LeadContact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_leadcontact");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_LeadContact");
				this.SetAttributeValue("cc_leadcontact", value);
				this.OnPropertyChanged("cc_LeadContact");
			}
		}
		
		/// <summary>
		/// Text field which should contain a URL to the Capability Evidence
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_linktocapabilityevidence")]
		public string cc_LinktoCapabilityEvidence
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_linktocapabilityevidence");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_LinktoCapabilityEvidence");
				this.SetAttributeValue("cc_linktocapabilityevidence", value);
				this.OnPropertyChanged("cc_LinktoCapabilityEvidence");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_linktocapabilityevidence2")]
		public string cc_LinktoCapabilityEvidence2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_linktocapabilityevidence2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_LinktoCapabilityEvidence2");
				this.SetAttributeValue("cc_linktocapabilityevidence2", value);
				this.OnPropertyChanged("cc_LinktoCapabilityEvidence2");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_linktocapabilityevidence3")]
		public string cc_LinktoCapabilityEvidence3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_linktocapabilityevidence3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_LinktoCapabilityEvidence3");
				this.SetAttributeValue("cc_linktocapabilityevidence3", value);
				this.OnPropertyChanged("cc_LinktoCapabilityEvidence3");
			}
		}
		
		/// <summary>
		/// Free text field to contain a URL
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_linktostandardevidence")]
		public string cc_LinktoStandardEvidence
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_linktostandardevidence");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_LinktoStandardEvidence");
				this.SetAttributeValue("cc_linktostandardevidence", value);
				this.OnPropertyChanged("cc_LinktoStandardEvidence");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_linktostandardevidence2")]
		public string cc_LinktoStandardEvidence2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_linktostandardevidence2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_LinktoStandardEvidence2");
				this.SetAttributeValue("cc_linktostandardevidence2", value);
				this.OnPropertyChanged("cc_LinktoStandardEvidence2");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_linktostandardevidence3")]
		public string cc_LinktoStandardEvidence3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_linktostandardevidence3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_LinktoStandardEvidence3");
				this.SetAttributeValue("cc_linktostandardevidence3", value);
				this.OnPropertyChanged("cc_LinktoStandardEvidence3");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference cc_ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_modifiedby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_ModifiedBy");
				this.SetAttributeValue("cc_modifiedby", value);
				this.OnPropertyChanged("cc_ModifiedBy");
			}
		}
		
		/// <summary>
		/// Product/Service name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_name")]
		public string cc_name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_name");
				this.SetAttributeValue("cc_name", value);
				this.OnPropertyChanged("cc_name");
			}
		}
		
		/// <summary>
		/// Unique identifier for Organisation associated with Solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_organisationid")]
		public Microsoft.Xrm.Sdk.EntityReference cc_OrganisationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_organisationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_OrganisationId");
				this.SetAttributeValue("cc_organisationid", value);
				this.OnPropertyChanged("cc_OrganisationId");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_previous_version")]
		public Microsoft.Xrm.Sdk.EntityReference cc_Previous_Version
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_previous_version");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_Previous_Version");
				this.SetAttributeValue("cc_previous_version", value);
				this.OnPropertyChanged("cc_Previous_Version");
			}
		}
		
		/// <summary>
		/// Product/Service previous version
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_previousversion")]
		public string cc_PreviousVersion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_previousversion");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_PreviousVersion");
				this.SetAttributeValue("cc_previousversion", value);
				this.OnPropertyChanged("cc_PreviousVersion");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_productpage")]
		public string cc_ProductPage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_productpage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_ProductPage");
				this.SetAttributeValue("cc_productpage", value);
				this.OnPropertyChanged("cc_ProductPage");
			}
		}
		
		/// <summary>
		/// Lookup to Contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_secondarycontact")]
		public Microsoft.Xrm.Sdk.EntityReference cc_SecondaryContact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_secondarycontact");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_SecondaryContact");
				this.SetAttributeValue("cc_secondarycontact", value);
				this.OnPropertyChanged("cc_SecondaryContact");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_solution_version")]
		public string cc_Solution_Version
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_solution_version");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_Solution_Version");
				this.SetAttributeValue("cc_solution_version", value);
				this.OnPropertyChanged("cc_Solution_Version");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_solutionid")]
		public System.Nullable<System.Guid> cc_solutionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("cc_solutionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_solutionId");
				this.SetAttributeValue("cc_solutionid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("cc_solutionId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_solutionid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.cc_solutionId = value;
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_solutionreferencenumber")]
		public string cc_SolutionReferenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_solutionreferencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_SolutionReferenceNumber");
				this.SetAttributeValue("cc_solutionreferencenumber", value);
				this.OnPropertyChanged("cc_SolutionReferenceNumber");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_solutionsubmitted")]
		public System.Nullable<bool> cc_SolutionSubmitted
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cc_solutionsubmitted");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_SolutionSubmitted");
				this.SetAttributeValue("cc_solutionsubmitted", value);
				this.OnPropertyChanged("cc_SolutionSubmitted");
			}
		}
		
		/// <summary>
		/// Free text field for additional information
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_standardmessage")]
		public string cc_StandardMessage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_standardmessage");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_StandardMessage");
				this.SetAttributeValue("cc_standardmessage", value);
				this.OnPropertyChanged("cc_StandardMessage");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_standardmessage2")]
		public string cc_StandardMessage2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_standardmessage2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_StandardMessage2");
				this.SetAttributeValue("cc_standardmessage2", value);
				this.OnPropertyChanged("cc_StandardMessage2");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_standardmessage3")]
		public string cc_StandardMessage3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_standardmessage3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_StandardMessage3");
				this.SetAttributeValue("cc_standardmessage3", value);
				this.OnPropertyChanged("cc_StandardMessage3");
			}
		}
		
		/// <summary>
		/// Option Set for Standard Status
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_standardstatus")]
		public Microsoft.Xrm.Sdk.OptionSetValue cc_StandardStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cc_standardstatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_StandardStatus");
				this.SetAttributeValue("cc_standardstatus", value);
				this.OnPropertyChanged("cc_StandardStatus");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_standardstatus2")]
		public Microsoft.Xrm.Sdk.OptionSetValue cc_StandardStatus2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cc_standardstatus2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_StandardStatus2");
				this.SetAttributeValue("cc_standardstatus2", value);
				this.OnPropertyChanged("cc_StandardStatus2");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_standardstatus3")]
		public Microsoft.Xrm.Sdk.OptionSetValue cc_StandardStatus3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cc_standardstatus3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_StandardStatus3");
				this.SetAttributeValue("cc_standardstatus3", value);
				this.OnPropertyChanged("cc_StandardStatus3");
			}
		}
		
		/// <summary>
		/// Yes/No field
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_standardsubmitted")]
		public System.Nullable<bool> cc_StandardSubmitted
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cc_standardsubmitted");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_StandardSubmitted");
				this.SetAttributeValue("cc_standardsubmitted", value);
				this.OnPropertyChanged("cc_StandardSubmitted");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_standardsubmitted2")]
		public System.Nullable<bool> cc_StandardSubmitted2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cc_standardsubmitted2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_StandardSubmitted2");
				this.SetAttributeValue("cc_standardsubmitted2", value);
				this.OnPropertyChanged("cc_StandardSubmitted2");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_standardsubmitted3")]
		public System.Nullable<bool> cc_StandardSubmitted3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cc_standardsubmitted3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_StandardSubmitted3");
				this.SetAttributeValue("cc_standardsubmitted3", value);
				this.OnPropertyChanged("cc_StandardSubmitted3");
			}
		}
		
		/// <summary>
		/// Option set for system interoperability
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_system1")]
		public Microsoft.Xrm.Sdk.OptionSetValue cc_System1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cc_system1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_System1");
				this.SetAttributeValue("cc_system1", value);
				this.OnPropertyChanged("cc_System1");
			}
		}
		
		/// <summary>
		/// Option Set for system interoperability
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_system2")]
		public Microsoft.Xrm.Sdk.OptionSetValue cc_System2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cc_system2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_System2");
				this.SetAttributeValue("cc_system2", value);
				this.OnPropertyChanged("cc_System2");
			}
		}
		
		/// <summary>
		/// Option Set for system interoperability
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_system3")]
		public Microsoft.Xrm.Sdk.OptionSetValue cc_System3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cc_system3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_System3");
				this.SetAttributeValue("cc_system3", value);
				this.OnPropertyChanged("cc_System3");
			}
		}
		
		/// <summary>
		/// Option set for System Requirement
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_systemrequirement1")]
		public Microsoft.Xrm.Sdk.OptionSetValue cc_SystemRequirement1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cc_systemrequirement1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_SystemRequirement1");
				this.SetAttributeValue("cc_systemrequirement1", value);
				this.OnPropertyChanged("cc_SystemRequirement1");
			}
		}
		
		/// <summary>
		/// Option Set for system requirements
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_systemrequirement2")]
		public Microsoft.Xrm.Sdk.OptionSetValue cc_SystemRequirement2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cc_systemrequirement2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_SystemRequirement2");
				this.SetAttributeValue("cc_systemrequirement2", value);
				this.OnPropertyChanged("cc_SystemRequirement2");
			}
		}
		
		/// <summary>
		/// Option Set for system requirements
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_systemrequirement3")]
		public Microsoft.Xrm.Sdk.OptionSetValue cc_SystemRequirement3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cc_systemrequirement3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_SystemRequirement3");
				this.SetAttributeValue("cc_systemrequirement3", value);
				this.OnPropertyChanged("cc_SystemRequirement3");
			}
		}
		
		/// <summary>
		/// Option Set for system requirements
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_systemrequirement4")]
		public Microsoft.Xrm.Sdk.OptionSetValue cc_SystemRequirement4
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cc_systemrequirement4");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_SystemRequirement4");
				this.SetAttributeValue("cc_systemrequirement4", value);
				this.OnPropertyChanged("cc_SystemRequirement4");
			}
		}
		
		/// <summary>
		/// Lookup to Contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_technicalcontact")]
		public Microsoft.Xrm.Sdk.EntityReference cc_TechnicalContact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_technicalcontact");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_TechnicalContact");
				this.SetAttributeValue("cc_technicalcontact", value);
				this.OnPropertyChanged("cc_TechnicalContact");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_technicalcontactid")]
		public Microsoft.Xrm.Sdk.EntityReference cc_TechnicalContactID
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cc_technicalcontactid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_TechnicalContactID");
				this.SetAttributeValue("cc_technicalcontactid", value);
				this.OnPropertyChanged("cc_TechnicalContactID");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_trainingonline")]
		public System.Nullable<bool> cc_TrainingOnline
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cc_trainingonline");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_TrainingOnline");
				this.SetAttributeValue("cc_trainingonline", value);
				this.OnPropertyChanged("cc_TrainingOnline");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_trainingonsite")]
		public System.Nullable<bool> cc_TrainingOnSite
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cc_trainingonsite");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_TrainingOnSite");
				this.SetAttributeValue("cc_trainingonsite", value);
				this.OnPropertyChanged("cc_TrainingOnSite");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_trainingvirtualclassroom")]
		public System.Nullable<bool> cc_TrainingVirtualClassroom
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("cc_trainingvirtualclassroom");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_TrainingVirtualClassroom");
				this.SetAttributeValue("cc_trainingvirtualclassroom", value);
				this.OnPropertyChanged("cc_TrainingVirtualClassroom");
			}
		}
		
		/// <summary>
		/// Product/Service current version
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_version")]
		public string cc_Version
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_version");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_Version");
				this.SetAttributeValue("cc_version", value);
				this.OnPropertyChanged("cc_Version");
			}
		}
		
		/// <summary>
		/// Free text field for write in benefits
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_writeinbenefit1")]
		public string cc_WriteInBenefit1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_writeinbenefit1");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_WriteInBenefit1");
				this.SetAttributeValue("cc_writeinbenefit1", value);
				this.OnPropertyChanged("cc_WriteInBenefit1");
			}
		}
		
		/// <summary>
		/// Free text field for write in benefit
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_writeinbenefit2")]
		public string cc_WriteInBenefit2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_writeinbenefit2");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_WriteInBenefit2");
				this.SetAttributeValue("cc_writeinbenefit2", value);
				this.OnPropertyChanged("cc_WriteInBenefit2");
			}
		}
		
		/// <summary>
		/// Free text field for write in benefit
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc_writeinbenefit3")]
		public string cc_WriteInBenefit3
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("cc_writeinbenefit3");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("cc_WriteInBenefit3");
				this.SetAttributeValue("cc_writeinbenefit3", value);
				this.OnPropertyChanged("cc_WriteInBenefit3");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the entity with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Contains the id of the process associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> processid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("processid");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("processid");
			}
		}
		
		/// <summary>
		/// Contains the id of the stage where the entity is located.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> stageid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("stageid");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("stageid");
			}
		}
		
		/// <summary>
		/// Status of the Solution
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Gif.Plugins.PluginEntities.cc_solutionState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Gif.Plugins.PluginEntities.cc_solutionState)(System.Enum.ToObject(typeof(Gif.Plugins.PluginEntities.cc_solutionState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Assurance status of the Product/Service
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string traversedpath
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("traversedpath");
				this.SetAttributeValue("traversedpath", value);
				this.OnPropertyChanged("traversedpath");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
	}
}