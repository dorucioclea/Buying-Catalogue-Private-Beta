/**
 * catalogue-api
 * NHS Digital GP IT Futures Buying Catalog API
 *
 * OpenAPI spec version: 1.0.0-private-beta
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CatalogueApi);
  }
}(this, function(expect, CatalogueApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CatalogueApi.SolutionEx();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SolutionEx', function() {
    it('should create an instance of SolutionEx', function() {
      // uncomment below and update the code to test SolutionEx
      //var instance = new CatalogueApi.SolutionEx();
      //expect(instance).to.be.a(CatalogueApi.SolutionEx);
    });

    it('should have the property solution (base name: "solution")', function() {
      // uncomment below and update the code to test the property solution
      //var instance = new CatalogueApi.SolutionEx();
      //expect(instance).to.be();
    });

    it('should have the property claimedCapability (base name: "claimedCapability")', function() {
      // uncomment below and update the code to test the property claimedCapability
      //var instance = new CatalogueApi.SolutionEx();
      //expect(instance).to.be();
    });

    it('should have the property claimedCapabilityEvidence (base name: "claimedCapabilityEvidence")', function() {
      // uncomment below and update the code to test the property claimedCapabilityEvidence
      //var instance = new CatalogueApi.SolutionEx();
      //expect(instance).to.be();
    });

    it('should have the property claimedCapabilityReview (base name: "claimedCapabilityReview")', function() {
      // uncomment below and update the code to test the property claimedCapabilityReview
      //var instance = new CatalogueApi.SolutionEx();
      //expect(instance).to.be();
    });

    it('should have the property claimedStandard (base name: "claimedStandard")', function() {
      // uncomment below and update the code to test the property claimedStandard
      //var instance = new CatalogueApi.SolutionEx();
      //expect(instance).to.be();
    });

    it('should have the property claimedStandardEvidence (base name: "claimedStandardEvidence")', function() {
      // uncomment below and update the code to test the property claimedStandardEvidence
      //var instance = new CatalogueApi.SolutionEx();
      //expect(instance).to.be();
    });

    it('should have the property claimedStandardReview (base name: "claimedStandardReview")', function() {
      // uncomment below and update the code to test the property claimedStandardReview
      //var instance = new CatalogueApi.SolutionEx();
      //expect(instance).to.be();
    });

    it('should have the property technicalContact (base name: "technicalContact")', function() {
      // uncomment below and update the code to test the property technicalContact
      //var instance = new CatalogueApi.SolutionEx();
      //expect(instance).to.be();
    });

  });

}));
