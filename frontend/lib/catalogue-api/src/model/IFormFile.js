/**
 * catalogue-api
 * NHS Digital GP IT Futures Buying Catalog API
 *
 * OpenAPI spec version: 1.0.0-private-beta
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CatalogueApi) {
      root.CatalogueApi = {};
    }
    root.CatalogueApi.IFormFile = factory(root.CatalogueApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The IFormFile model module.
   * @module model/IFormFile
   * @version 1.0.0-private-beta
   */

  /**
   * Constructs a new <code>IFormFile</code>.
   * @alias module:model/IFormFile
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>IFormFile</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IFormFile} obj Optional instance to populate.
   * @return {module:model/IFormFile} The populated <code>IFormFile</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('contentType')) {
        obj['contentType'] = ApiClient.convertToType(data['contentType'], 'String');
      }
      if (data.hasOwnProperty('contentDisposition')) {
        obj['contentDisposition'] = ApiClient.convertToType(data['contentDisposition'], 'String');
      }
      if (data.hasOwnProperty('headers')) {
        obj['headers'] = ApiClient.convertToType(data['headers'], {'String': ['String']});
      }
      if (data.hasOwnProperty('length')) {
        obj['length'] = ApiClient.convertToType(data['length'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('fileName')) {
        obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} contentType
   */
  exports.prototype['contentType'] = undefined;
  /**
   * @member {String} contentDisposition
   */
  exports.prototype['contentDisposition'] = undefined;
  /**
   * @member {Object.<String, Array.<String>>} headers
   */
  exports.prototype['headers'] = undefined;
  /**
   * @member {Number} length
   */
  exports.prototype['length'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} fileName
   */
  exports.prototype['fileName'] = undefined;



  return exports;
}));


