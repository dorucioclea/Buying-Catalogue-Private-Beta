/**
 * catalogue-api
 * NHS Digital GP IT Futures Buying Catalog API
 *
 * OpenAPI spec version: 1.0.0-private-beta
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BlobInfo', 'model/Capabilities', 'model/CapabilitiesImplemented', 'model/CapabilitiesImplementedEvidence', 'model/CapabilitiesImplementedReviews', 'model/CapabilityMapping', 'model/CapabilityMappings', 'model/ClaimBlobInfoMap', 'model/Contacts', 'model/EntityTagHeaderValue', 'model/FileResult', 'model/Frameworks', 'model/IFormFile', 'model/KeywordCount', 'model/OptionalStandard', 'model/Organisations', 'model/PaginatedListBlobInfo', 'model/PaginatedListCapabilities', 'model/PaginatedListCapabilitiesImplemented', 'model/PaginatedListClaimBlobInfoMap', 'model/PaginatedListContacts', 'model/PaginatedListFrameworks', 'model/PaginatedListIEnumerableCapabilitiesImplementedEvidence', 'model/PaginatedListIEnumerableCapabilitiesImplementedReviews', 'model/PaginatedListIEnumerableStandardsApplicableEvidence', 'model/PaginatedListIEnumerableStandardsApplicableReviews', 'model/PaginatedListKeywordCount', 'model/PaginatedListSearchResult', 'model/PaginatedListSolutions', 'model/PaginatedListStandards', 'model/PaginatedListStandardsApplicable', 'model/PaginatedListTechnicalContacts', 'model/SearchResult', 'model/SolutionEx', 'model/Solutions', 'model/Standards', 'model/StandardsApplicable', 'model/StandardsApplicableEvidence', 'model/StandardsApplicableReviews', 'model/StringSegment', 'model/TechnicalContacts', 'api/CapabilitiesApi', 'api/CapabilitiesImplementedApi', 'api/CapabilitiesImplementedEvidenceApi', 'api/CapabilitiesImplementedEvidenceBlobStoreApi', 'api/CapabilitiesImplementedReviewsApi', 'api/CapabilityMappingsApi', 'api/ContactsApi', 'api/EvidenceBlobStoreApi', 'api/FrameworksApi', 'api/KeywordSearchHistoryApi', 'api/LinkManagerApi', 'api/OrganisationsApi', 'api/SearchApi', 'api/SolutionsApi', 'api/SolutionsExApi', 'api/StandardsApi', 'api/StandardsApplicableApi', 'api/StandardsApplicableEvidenceApi', 'api/StandardsApplicableEvidenceBlobStoreApi', 'api/StandardsApplicableReviewsApi', 'api/TechnicalContactsApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/BlobInfo'), require('./model/Capabilities'), require('./model/CapabilitiesImplemented'), require('./model/CapabilitiesImplementedEvidence'), require('./model/CapabilitiesImplementedReviews'), require('./model/CapabilityMapping'), require('./model/CapabilityMappings'), require('./model/ClaimBlobInfoMap'), require('./model/Contacts'), require('./model/EntityTagHeaderValue'), require('./model/FileResult'), require('./model/Frameworks'), require('./model/IFormFile'), require('./model/KeywordCount'), require('./model/OptionalStandard'), require('./model/Organisations'), require('./model/PaginatedListBlobInfo'), require('./model/PaginatedListCapabilities'), require('./model/PaginatedListCapabilitiesImplemented'), require('./model/PaginatedListClaimBlobInfoMap'), require('./model/PaginatedListContacts'), require('./model/PaginatedListFrameworks'), require('./model/PaginatedListIEnumerableCapabilitiesImplementedEvidence'), require('./model/PaginatedListIEnumerableCapabilitiesImplementedReviews'), require('./model/PaginatedListIEnumerableStandardsApplicableEvidence'), require('./model/PaginatedListIEnumerableStandardsApplicableReviews'), require('./model/PaginatedListKeywordCount'), require('./model/PaginatedListSearchResult'), require('./model/PaginatedListSolutions'), require('./model/PaginatedListStandards'), require('./model/PaginatedListStandardsApplicable'), require('./model/PaginatedListTechnicalContacts'), require('./model/SearchResult'), require('./model/SolutionEx'), require('./model/Solutions'), require('./model/Standards'), require('./model/StandardsApplicable'), require('./model/StandardsApplicableEvidence'), require('./model/StandardsApplicableReviews'), require('./model/StringSegment'), require('./model/TechnicalContacts'), require('./api/CapabilitiesApi'), require('./api/CapabilitiesImplementedApi'), require('./api/CapabilitiesImplementedEvidenceApi'), require('./api/CapabilitiesImplementedEvidenceBlobStoreApi'), require('./api/CapabilitiesImplementedReviewsApi'), require('./api/CapabilityMappingsApi'), require('./api/ContactsApi'), require('./api/EvidenceBlobStoreApi'), require('./api/FrameworksApi'), require('./api/KeywordSearchHistoryApi'), require('./api/LinkManagerApi'), require('./api/OrganisationsApi'), require('./api/SearchApi'), require('./api/SolutionsApi'), require('./api/SolutionsExApi'), require('./api/StandardsApi'), require('./api/StandardsApplicableApi'), require('./api/StandardsApplicableEvidenceApi'), require('./api/StandardsApplicableEvidenceBlobStoreApi'), require('./api/StandardsApplicableReviewsApi'), require('./api/TechnicalContactsApi'));
  }
}(function(ApiClient, BlobInfo, Capabilities, CapabilitiesImplemented, CapabilitiesImplementedEvidence, CapabilitiesImplementedReviews, CapabilityMapping, CapabilityMappings, ClaimBlobInfoMap, Contacts, EntityTagHeaderValue, FileResult, Frameworks, IFormFile, KeywordCount, OptionalStandard, Organisations, PaginatedListBlobInfo, PaginatedListCapabilities, PaginatedListCapabilitiesImplemented, PaginatedListClaimBlobInfoMap, PaginatedListContacts, PaginatedListFrameworks, PaginatedListIEnumerableCapabilitiesImplementedEvidence, PaginatedListIEnumerableCapabilitiesImplementedReviews, PaginatedListIEnumerableStandardsApplicableEvidence, PaginatedListIEnumerableStandardsApplicableReviews, PaginatedListKeywordCount, PaginatedListSearchResult, PaginatedListSolutions, PaginatedListStandards, PaginatedListStandardsApplicable, PaginatedListTechnicalContacts, SearchResult, SolutionEx, Solutions, Standards, StandardsApplicable, StandardsApplicableEvidence, StandardsApplicableReviews, StringSegment, TechnicalContacts, CapabilitiesApi, CapabilitiesImplementedApi, CapabilitiesImplementedEvidenceApi, CapabilitiesImplementedEvidenceBlobStoreApi, CapabilitiesImplementedReviewsApi, CapabilityMappingsApi, ContactsApi, EvidenceBlobStoreApi, FrameworksApi, KeywordSearchHistoryApi, LinkManagerApi, OrganisationsApi, SearchApi, SolutionsApi, SolutionsExApi, StandardsApi, StandardsApplicableApi, StandardsApplicableEvidenceApi, StandardsApplicableEvidenceBlobStoreApi, StandardsApplicableReviewsApi, TechnicalContactsApi) {
  'use strict';

  /**
   * NHS_Digital_GP_IT_Futures_Buying_Catalog_API.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var CatalogueApi = require('index'); // See note below*.
   * var xxxSvc = new CatalogueApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new CatalogueApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new CatalogueApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new CatalogueApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0-private-beta
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The BlobInfo model constructor.
     * @property {module:model/BlobInfo}
     */
    BlobInfo: BlobInfo,
    /**
     * The Capabilities model constructor.
     * @property {module:model/Capabilities}
     */
    Capabilities: Capabilities,
    /**
     * The CapabilitiesImplemented model constructor.
     * @property {module:model/CapabilitiesImplemented}
     */
    CapabilitiesImplemented: CapabilitiesImplemented,
    /**
     * The CapabilitiesImplementedEvidence model constructor.
     * @property {module:model/CapabilitiesImplementedEvidence}
     */
    CapabilitiesImplementedEvidence: CapabilitiesImplementedEvidence,
    /**
     * The CapabilitiesImplementedReviews model constructor.
     * @property {module:model/CapabilitiesImplementedReviews}
     */
    CapabilitiesImplementedReviews: CapabilitiesImplementedReviews,
    /**
     * The CapabilityMapping model constructor.
     * @property {module:model/CapabilityMapping}
     */
    CapabilityMapping: CapabilityMapping,
    /**
     * The CapabilityMappings model constructor.
     * @property {module:model/CapabilityMappings}
     */
    CapabilityMappings: CapabilityMappings,
    /**
     * The ClaimBlobInfoMap model constructor.
     * @property {module:model/ClaimBlobInfoMap}
     */
    ClaimBlobInfoMap: ClaimBlobInfoMap,
    /**
     * The Contacts model constructor.
     * @property {module:model/Contacts}
     */
    Contacts: Contacts,
    /**
     * The EntityTagHeaderValue model constructor.
     * @property {module:model/EntityTagHeaderValue}
     */
    EntityTagHeaderValue: EntityTagHeaderValue,
    /**
     * The FileResult model constructor.
     * @property {module:model/FileResult}
     */
    FileResult: FileResult,
    /**
     * The Frameworks model constructor.
     * @property {module:model/Frameworks}
     */
    Frameworks: Frameworks,
    /**
     * The IFormFile model constructor.
     * @property {module:model/IFormFile}
     */
    IFormFile: IFormFile,
    /**
     * The KeywordCount model constructor.
     * @property {module:model/KeywordCount}
     */
    KeywordCount: KeywordCount,
    /**
     * The OptionalStandard model constructor.
     * @property {module:model/OptionalStandard}
     */
    OptionalStandard: OptionalStandard,
    /**
     * The Organisations model constructor.
     * @property {module:model/Organisations}
     */
    Organisations: Organisations,
    /**
     * The PaginatedListBlobInfo model constructor.
     * @property {module:model/PaginatedListBlobInfo}
     */
    PaginatedListBlobInfo: PaginatedListBlobInfo,
    /**
     * The PaginatedListCapabilities model constructor.
     * @property {module:model/PaginatedListCapabilities}
     */
    PaginatedListCapabilities: PaginatedListCapabilities,
    /**
     * The PaginatedListCapabilitiesImplemented model constructor.
     * @property {module:model/PaginatedListCapabilitiesImplemented}
     */
    PaginatedListCapabilitiesImplemented: PaginatedListCapabilitiesImplemented,
    /**
     * The PaginatedListClaimBlobInfoMap model constructor.
     * @property {module:model/PaginatedListClaimBlobInfoMap}
     */
    PaginatedListClaimBlobInfoMap: PaginatedListClaimBlobInfoMap,
    /**
     * The PaginatedListContacts model constructor.
     * @property {module:model/PaginatedListContacts}
     */
    PaginatedListContacts: PaginatedListContacts,
    /**
     * The PaginatedListFrameworks model constructor.
     * @property {module:model/PaginatedListFrameworks}
     */
    PaginatedListFrameworks: PaginatedListFrameworks,
    /**
     * The PaginatedListIEnumerableCapabilitiesImplementedEvidence model constructor.
     * @property {module:model/PaginatedListIEnumerableCapabilitiesImplementedEvidence}
     */
    PaginatedListIEnumerableCapabilitiesImplementedEvidence: PaginatedListIEnumerableCapabilitiesImplementedEvidence,
    /**
     * The PaginatedListIEnumerableCapabilitiesImplementedReviews model constructor.
     * @property {module:model/PaginatedListIEnumerableCapabilitiesImplementedReviews}
     */
    PaginatedListIEnumerableCapabilitiesImplementedReviews: PaginatedListIEnumerableCapabilitiesImplementedReviews,
    /**
     * The PaginatedListIEnumerableStandardsApplicableEvidence model constructor.
     * @property {module:model/PaginatedListIEnumerableStandardsApplicableEvidence}
     */
    PaginatedListIEnumerableStandardsApplicableEvidence: PaginatedListIEnumerableStandardsApplicableEvidence,
    /**
     * The PaginatedListIEnumerableStandardsApplicableReviews model constructor.
     * @property {module:model/PaginatedListIEnumerableStandardsApplicableReviews}
     */
    PaginatedListIEnumerableStandardsApplicableReviews: PaginatedListIEnumerableStandardsApplicableReviews,
    /**
     * The PaginatedListKeywordCount model constructor.
     * @property {module:model/PaginatedListKeywordCount}
     */
    PaginatedListKeywordCount: PaginatedListKeywordCount,
    /**
     * The PaginatedListSearchResult model constructor.
     * @property {module:model/PaginatedListSearchResult}
     */
    PaginatedListSearchResult: PaginatedListSearchResult,
    /**
     * The PaginatedListSolutions model constructor.
     * @property {module:model/PaginatedListSolutions}
     */
    PaginatedListSolutions: PaginatedListSolutions,
    /**
     * The PaginatedListStandards model constructor.
     * @property {module:model/PaginatedListStandards}
     */
    PaginatedListStandards: PaginatedListStandards,
    /**
     * The PaginatedListStandardsApplicable model constructor.
     * @property {module:model/PaginatedListStandardsApplicable}
     */
    PaginatedListStandardsApplicable: PaginatedListStandardsApplicable,
    /**
     * The PaginatedListTechnicalContacts model constructor.
     * @property {module:model/PaginatedListTechnicalContacts}
     */
    PaginatedListTechnicalContacts: PaginatedListTechnicalContacts,
    /**
     * The SearchResult model constructor.
     * @property {module:model/SearchResult}
     */
    SearchResult: SearchResult,
    /**
     * The SolutionEx model constructor.
     * @property {module:model/SolutionEx}
     */
    SolutionEx: SolutionEx,
    /**
     * The Solutions model constructor.
     * @property {module:model/Solutions}
     */
    Solutions: Solutions,
    /**
     * The Standards model constructor.
     * @property {module:model/Standards}
     */
    Standards: Standards,
    /**
     * The StandardsApplicable model constructor.
     * @property {module:model/StandardsApplicable}
     */
    StandardsApplicable: StandardsApplicable,
    /**
     * The StandardsApplicableEvidence model constructor.
     * @property {module:model/StandardsApplicableEvidence}
     */
    StandardsApplicableEvidence: StandardsApplicableEvidence,
    /**
     * The StandardsApplicableReviews model constructor.
     * @property {module:model/StandardsApplicableReviews}
     */
    StandardsApplicableReviews: StandardsApplicableReviews,
    /**
     * The StringSegment model constructor.
     * @property {module:model/StringSegment}
     */
    StringSegment: StringSegment,
    /**
     * The TechnicalContacts model constructor.
     * @property {module:model/TechnicalContacts}
     */
    TechnicalContacts: TechnicalContacts,
    /**
     * The CapabilitiesApi service constructor.
     * @property {module:api/CapabilitiesApi}
     */
    CapabilitiesApi: CapabilitiesApi,
    /**
     * The CapabilitiesImplementedApi service constructor.
     * @property {module:api/CapabilitiesImplementedApi}
     */
    CapabilitiesImplementedApi: CapabilitiesImplementedApi,
    /**
     * The CapabilitiesImplementedEvidenceApi service constructor.
     * @property {module:api/CapabilitiesImplementedEvidenceApi}
     */
    CapabilitiesImplementedEvidenceApi: CapabilitiesImplementedEvidenceApi,
    /**
     * The CapabilitiesImplementedEvidenceBlobStoreApi service constructor.
     * @property {module:api/CapabilitiesImplementedEvidenceBlobStoreApi}
     */
    CapabilitiesImplementedEvidenceBlobStoreApi: CapabilitiesImplementedEvidenceBlobStoreApi,
    /**
     * The CapabilitiesImplementedReviewsApi service constructor.
     * @property {module:api/CapabilitiesImplementedReviewsApi}
     */
    CapabilitiesImplementedReviewsApi: CapabilitiesImplementedReviewsApi,
    /**
     * The CapabilityMappingsApi service constructor.
     * @property {module:api/CapabilityMappingsApi}
     */
    CapabilityMappingsApi: CapabilityMappingsApi,
    /**
     * The ContactsApi service constructor.
     * @property {module:api/ContactsApi}
     */
    ContactsApi: ContactsApi,
    /**
     * The EvidenceBlobStoreApi service constructor.
     * @property {module:api/EvidenceBlobStoreApi}
     */
    EvidenceBlobStoreApi: EvidenceBlobStoreApi,
    /**
     * The FrameworksApi service constructor.
     * @property {module:api/FrameworksApi}
     */
    FrameworksApi: FrameworksApi,
    /**
     * The KeywordSearchHistoryApi service constructor.
     * @property {module:api/KeywordSearchHistoryApi}
     */
    KeywordSearchHistoryApi: KeywordSearchHistoryApi,
    /**
     * The LinkManagerApi service constructor.
     * @property {module:api/LinkManagerApi}
     */
    LinkManagerApi: LinkManagerApi,
    /**
     * The OrganisationsApi service constructor.
     * @property {module:api/OrganisationsApi}
     */
    OrganisationsApi: OrganisationsApi,
    /**
     * The SearchApi service constructor.
     * @property {module:api/SearchApi}
     */
    SearchApi: SearchApi,
    /**
     * The SolutionsApi service constructor.
     * @property {module:api/SolutionsApi}
     */
    SolutionsApi: SolutionsApi,
    /**
     * The SolutionsExApi service constructor.
     * @property {module:api/SolutionsExApi}
     */
    SolutionsExApi: SolutionsExApi,
    /**
     * The StandardsApi service constructor.
     * @property {module:api/StandardsApi}
     */
    StandardsApi: StandardsApi,
    /**
     * The StandardsApplicableApi service constructor.
     * @property {module:api/StandardsApplicableApi}
     */
    StandardsApplicableApi: StandardsApplicableApi,
    /**
     * The StandardsApplicableEvidenceApi service constructor.
     * @property {module:api/StandardsApplicableEvidenceApi}
     */
    StandardsApplicableEvidenceApi: StandardsApplicableEvidenceApi,
    /**
     * The StandardsApplicableEvidenceBlobStoreApi service constructor.
     * @property {module:api/StandardsApplicableEvidenceBlobStoreApi}
     */
    StandardsApplicableEvidenceBlobStoreApi: StandardsApplicableEvidenceBlobStoreApi,
    /**
     * The StandardsApplicableReviewsApi service constructor.
     * @property {module:api/StandardsApplicableReviewsApi}
     */
    StandardsApplicableReviewsApi: StandardsApplicableReviewsApi,
    /**
     * The TechnicalContactsApi service constructor.
     * @property {module:api/TechnicalContactsApi}
     */
    TechnicalContactsApi: TechnicalContactsApi
  };

  return exports;
}));
