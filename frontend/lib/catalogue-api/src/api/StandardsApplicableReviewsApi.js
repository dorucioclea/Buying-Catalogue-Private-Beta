/**
 * catalogue-api
 * NHS Digital GP IT Futures Buying Catalog API
 *
 * OpenAPI spec version: 1.0.0-private-beta
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PaginatedListIEnumerableStandardsApplicableReviews', 'model/StandardsApplicableReviews'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/PaginatedListIEnumerableStandardsApplicableReviews'), require('../model/StandardsApplicableReviews'));
  } else {
    // Browser globals (root is window)
    if (!root.CatalogueApi) {
      root.CatalogueApi = {};
    }
    root.CatalogueApi.StandardsApplicableReviewsApi = factory(root.CatalogueApi.ApiClient, root.CatalogueApi.PaginatedListIEnumerableStandardsApplicableReviews, root.CatalogueApi.StandardsApplicableReviews);
  }
}(this, function(ApiClient, PaginatedListIEnumerableStandardsApplicableReviews, StandardsApplicableReviews) {
  'use strict';

  /**
   * StandardsApplicableReviews service.
   * @module api/StandardsApplicableReviewsApi
   * @version 1.0.0-private-beta
   */

  /**
   * Constructs a new StandardsApplicableReviewsApi. 
   * @alias module:api/StandardsApplicableReviewsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;



    /**
     * Get all Reviews for a StandardsApplicable  Each list is a distinct &#39;chain&#39; of Review ie original Review with all subsequent Review  The first item in each &#39;chain&#39; is the most current Review.  The last item in each &#39;chain&#39; is the original Review.
     * @param {String} evidenceId CRM identifier of StandardsApplicableEvidence
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageIndex 1-based index of page to return.  Defaults to 1
     * @param {Number} opts.pageSize number of items per page.  Defaults to 20
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PaginatedListIEnumerableStandardsApplicableReviews} and HTTP response
     */
    this.apiStandardsApplicableReviewsByEvidenceByEvidenceIdGetWithHttpInfo = function(evidenceId, opts) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'evidenceId' is set
      if (evidenceId === undefined || evidenceId === null) {
        throw new Error("Missing the required parameter 'evidenceId' when calling apiStandardsApplicableReviewsByEvidenceByEvidenceIdGet");
      }


      var pathParams = {
        'evidenceId': evidenceId
      };
      var queryParams = {
        'pageIndex': opts['pageIndex'],
        'pageSize': opts['pageSize'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['basic', 'oauth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = PaginatedListIEnumerableStandardsApplicableReviews;

      return this.apiClient.callApi(
        '/api/StandardsApplicableReviews/ByEvidence/{evidenceId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Get all Reviews for a StandardsApplicable  Each list is a distinct &#39;chain&#39; of Review ie original Review with all subsequent Review  The first item in each &#39;chain&#39; is the most current Review.  The last item in each &#39;chain&#39; is the original Review.
     * @param {String} evidenceId CRM identifier of StandardsApplicableEvidence
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageIndex 1-based index of page to return.  Defaults to 1
     * @param {Number} opts.pageSize number of items per page.  Defaults to 20
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PaginatedListIEnumerableStandardsApplicableReviews}
     */
    this.apiStandardsApplicableReviewsByEvidenceByEvidenceIdGet = function(evidenceId, opts) {
      return this.apiStandardsApplicableReviewsByEvidenceByEvidenceIdGetWithHttpInfo(evidenceId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Create a new Review for a StandardsApplicable
     * @param {Object} opts Optional parameters
     * @param {module:model/StandardsApplicableReviews} opts.review new Review information
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/StandardsApplicableReviews} and HTTP response
     */
    this.apiStandardsApplicableReviewsPostWithHttpInfo = function(opts) {
      opts = opts || {};
      var postBody = opts['review'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['basic', 'oauth2'];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json'];
      var accepts = ['application/json'];
      var returnType = StandardsApplicableReviews;

      return this.apiClient.callApi(
        '/api/StandardsApplicableReviews', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Create a new Review for a StandardsApplicable
     * @param {Object} opts Optional parameters
     * @param {module:model/StandardsApplicableReviews} opts.review new Review information
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/StandardsApplicableReviews}
     */
    this.apiStandardsApplicableReviewsPost = function(opts) {
      return this.apiStandardsApplicableReviewsPostWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
  };

  return exports;
}));
