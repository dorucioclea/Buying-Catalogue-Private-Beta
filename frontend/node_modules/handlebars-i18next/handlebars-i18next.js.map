{"version":3,"sources":["handlebars-i18next.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;sBAWe,UAAS,UAAT,EAAqB,OAArB,EAA6C;AAAA,YAAf,IAAe,uEAAR,MAAQ;;AACxD,mBAAW,cAAX,CAA0B,IAA1B,EAAgC,UAAS,GAAT,QAAgC;AAAA,gBAAjB,IAAiB,QAAjB,IAAiB;AAAA,gBAAX,IAAW,QAAX,IAAW;AAAA,gBAAL,EAAK,QAAL,EAAK;;AAC5D,gBAAI,SAAS,EAAb;AACA,qBAAS,OAAT,CAAiB,eAAO;AAAE,oBAAI,KAAK,GAAL,CAAJ,EAAe;AACrC;AACA;AACA;AACA;AACA,2BAAO,GAAP,IAAc,KAAK,KAAL,CAAW,KAAK,GAAL,CAAX,CAAd;AACA,2BAAO,KAAK,GAAL,CAAP;AACH;AAAC,aAPF;AAQA,gBAAI,UAAU,OAAO,EAAP,EAAW,KAAK,IAAL,CAAU,OAArB,EAA8B,IAA9B,EAAoC,MAApC,EAA4C,EAAC,eAAe,KAAhB,EAA5C,CAAd;AACA,gBAAI,UAAU,QAAQ,OAAR,GAAkB,OAAO,EAAP,EAAW,IAAX,EAAiB,QAAQ,OAAzB,EAAkC,IAAlC,CAAhC;AACA,mBAAO,QAAQ,OAAf,CAZ4D,CAYpC;AACxB,gBAAI,EAAJ,EAAQ,QAAQ,YAAR,GAAuB,GAAG,OAAH,CAAvB;AACR,mBAAO,IAAI,WAAW,UAAf,CAA0B,QAAQ,CAAR,CAAU,GAAV,EAAe,OAAf,CAA1B,CAAP;AACH,SAfD;AAgBH,K;;AA5BD;AACA,QAAM,WAAW,CAAC,MAAD,EAAS,aAAT,EAAwB,IAAxB,EAA8B,aAA9B,EAA6C,eAA7C,CAAjB;;AAEA;AACA,aAAS,MAAT,CAAgB,MAAhB,EAAoC;AAAA,0CAAT,OAAS;AAAT,mBAAS;AAAA;;AAChC,gBAAQ,OAAR,CAAgB,kBAAU;AAAE,gBAAI,MAAJ,EAAY,KAAK,IAAI,GAAT,IAAgB,MAAhB,EAAwB;AAC5D,uBAAO,GAAP,IAAc,OAAO,GAAP,CAAd;AACH;AAAC,SAFF;AAGA,eAAO,MAAP;AACH;;AAmBA","file":"handlebars-i18next.js","sourcesContent":["// These are options to i18n.t that may take array or object values.\nconst jsonKeys = ['lngs', 'fallbackLng', 'ns', 'postProcess', 'interpolation'];\n\n// Quick polyfill for Object.assign, because IE11 doesn't have that method.\nfunction extend(target, ...sources) {\n    sources.forEach(source => { if (source) for (let key in source) {\n        target[key] = source[key];\n    }});\n    return target;\n}\n\nexport default function(Handlebars, i18next, name = 'i18n') {\n    Handlebars.registerHelper(name, function(key, {hash, data, fn}) {\n        let parsed = {};\n        jsonKeys.forEach(key => { if (hash[key]) {\n            // Everything in jsonKeys is known not to belong in options.replace.\n            // Everything in hash ends up in options.replace, so we limit\n            // interpolation replacement polution by transferring these keys\n            // to parsed.\n            parsed[key] = JSON.parse(hash[key]);\n            delete hash[key];\n        }});\n        let options = extend({}, data.root.i18next, hash, parsed, {returnObjects: false});\n        let replace = options.replace = extend({}, this, options.replace, hash);\n        delete replace.i18next; // may creep in if this === data.root\n        if (fn) options.defaultValue = fn(replace);\n        return new Handlebars.SafeString(i18next.t(key, options));\n    });\n};\n"]}